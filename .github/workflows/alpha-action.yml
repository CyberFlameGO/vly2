# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions
# Author: Andrew Somervell

name: V2LY

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lang:    
    name: Lang
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2      
    - name: Use Node 10
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - name: Lang
      run: |
        npm ci
        cp lang/en.json lang/en.orig.json
        npm run build:lang
        diff lang/en.json lang/en.orig.json
      
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - name: Check out
      uses: actions/checkout@v2      
    - name: Use Node 12
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Lint
      run: |
        npm ci
        npm run lint
    
  test:
    name: NPM and System Test
    runs-on: ubuntu-latest
    needs: [lang, lint]
    steps:
    - name: Check out
      uses: actions/checkout@v2      
    - name: Use Node 10
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
        mongoms_download_mirror: http://downloads.mongodb.org
        mongoms_version: 4.0.5
        mongoms_disable_postinstall: 1
        ci_node_index: 0
        ci_node_total: 1
        codecov_token: ${{ secrets.CODECOV_TOKEN }}

    - name: NPM Test          
      run: |
        npm ci
        npm run test-all -- --tap
        
    - name: Code coverage          
      run: |       
        ./node_modules/codecov/bin/codecov --disable=gcov
        
    - name: System Test
      run: |
        apt-get update
        apt-get install -y firefox-esr
        npm run end-to-end-test

  docker-build:
    name: Build and push docker container
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - name: Install AWS CLI          
      run: |
        pip install awscli
        wget https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-linux-amd64-latest -O ./ecs-cli
        chmod +x ./ecs-cli
        mv ./ecs-cli /usr/local/bin/
        which ecs-cli        
    - name: build
      run: ./x/aws/buildimage
    - name: deploy
      run: ./x/aws/deploy-alpha
  
      env:
        AWS_ACCOUNT_ID: 585172581592 # voluntarily-deployment
        AWS_ACCESS_KEY_ID: AKIAYQPYA7TMKZS4NM6W
        AWS_SECRET_ACCESS_KEY: ENCRYPTED[f5a784932b9a9863ed4b2b92778409fbb386525f3f1971c21ff24e01a40cc0c71884090277cf21c6f90b61dcecf9589b]
        AWS_DEFAULT_REGION: ap-southeast-2
        BADGR_USERNAME: andrew+badgr@voluntarily.nz
        BADGR_PASSWORD: ENCRYPTED[dd2c079dd8cf1f70cfa032d6264b22791fd19c5ec544fa27742a813dd2ddee8e7afcd9c4260117a7d34060122d033c4c]
        SMTP_ID: ENCRYPTED[07689bc5cc127560e922013dd7922f3053af96c03e3f6777a97068407e37ea822c23a1eed90e87ac36de3815193c61b9]
        SMTP_PWD: ENCRYPTED[644f233a01dd2bfdccb0df17cfabc58c47b55ebb869257a2f9eb8fd64b9a269d35927c2112d9ceef186d39723f8b2b6e]
        VLY_PRIVATE_KEY: ENCRYPTED[aebee936a9fa32427092dc88882e2fa84a46ad990f92563675b469c1a5e13fb208c2656d1cd3747f92d5d073c6513cc2]
        IMAGE_TAG_VERSION: ${CIRRUS_BRANCH}
        HOME: /root
        APP_URL: https://alpha.voluntarily.nz
        RAYGUN_EXPRESS_SERVER_API_KEY: ENCRYPTED[3974bfed615b2defe09eabc75e867ca8c4e7c23f894b32e30b06bb0be4b5e3aacce579b3c5984bb006f62a115828217f]
        RAYGUN_REACT_CLIENT_API_KEY: ENCRYPTED[3d157c56122be5408b0bc856a2974cfaab84c6ccd1bb6ce3a91f64c56e4f6745099da4837cff31bcb7564361dd0fb585]
